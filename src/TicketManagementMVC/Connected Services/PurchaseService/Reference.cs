//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TicketManagementMVC.PurchaseService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PurchaseService.IWcfPurchaseService")]
    public interface IWcfPurchaseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPurchaseService/AddSeatToCart", ReplyAction="http://tempuri.org/IWcfPurchaseService/AddSeatToCartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WcfBusinessLogic.Core.Contracts.Exceptions.ServiceValidationFaultDetails), Action="http://tempuri.org/IWcfPurchaseService/AddSeatToCartServiceValidationFaultDetails" +
            "Fault", Name="ServiceValidationFaultDetails", Namespace="http://schemas.datacontract.org/2004/07/WcfBusinessLogic.Core.Contracts.Exception" +
            "s")]
        void AddSeatToCart(int seatId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPurchaseService/AddSeatToCart", ReplyAction="http://tempuri.org/IWcfPurchaseService/AddSeatToCartResponse")]
        System.Threading.Tasks.Task AddSeatToCartAsync(int seatId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPurchaseService/GetOrderedSeats", ReplyAction="http://tempuri.org/IWcfPurchaseService/GetOrderedSeatsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WcfBusinessLogic.Core.Contracts.Exceptions.ServiceValidationFaultDetails), Action="http://tempuri.org/IWcfPurchaseService/GetOrderedSeatsServiceValidationFaultDetai" +
            "lsFault", Name="ServiceValidationFaultDetails", Namespace="http://schemas.datacontract.org/2004/07/WcfBusinessLogic.Core.Contracts.Exception" +
            "s")]
        WcfBusinessLogic.Core.Contracts.Data.SeatBusinessModel[] GetOrderedSeats(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPurchaseService/GetOrderedSeats", ReplyAction="http://tempuri.org/IWcfPurchaseService/GetOrderedSeatsResponse")]
        System.Threading.Tasks.Task<WcfBusinessLogic.Core.Contracts.Data.SeatBusinessModel[]> GetOrderedSeatsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPurchaseService/DeleteSeatFromCart", ReplyAction="http://tempuri.org/IWcfPurchaseService/DeleteSeatFromCartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WcfBusinessLogic.Core.Contracts.Exceptions.ServiceValidationFaultDetails), Action="http://tempuri.org/IWcfPurchaseService/DeleteSeatFromCartServiceValidationFaultDe" +
            "tailsFault", Name="ServiceValidationFaultDetails", Namespace="http://schemas.datacontract.org/2004/07/WcfBusinessLogic.Core.Contracts.Exception" +
            "s")]
        void DeleteSeatFromCart(int seatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPurchaseService/DeleteSeatFromCart", ReplyAction="http://tempuri.org/IWcfPurchaseService/DeleteSeatFromCartResponse")]
        System.Threading.Tasks.Task DeleteSeatFromCartAsync(int seatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPurchaseService/CreateOrder", ReplyAction="http://tempuri.org/IWcfPurchaseService/CreateOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WcfBusinessLogic.Core.Contracts.Exceptions.ServiceValidationFaultDetails), Action="http://tempuri.org/IWcfPurchaseService/CreateOrderServiceValidationFaultDetailsFa" +
            "ult", Name="ServiceValidationFaultDetails", Namespace="http://schemas.datacontract.org/2004/07/WcfBusinessLogic.Core.Contracts.Exception" +
            "s")]
        void CreateOrder(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPurchaseService/CreateOrder", ReplyAction="http://tempuri.org/IWcfPurchaseService/CreateOrderResponse")]
        System.Threading.Tasks.Task CreateOrderAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPurchaseService/GetPurchaseHistory", ReplyAction="http://tempuri.org/IWcfPurchaseService/GetPurchaseHistoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WcfBusinessLogic.Core.Contracts.Exceptions.ServiceValidationFaultDetails), Action="http://tempuri.org/IWcfPurchaseService/GetPurchaseHistoryServiceValidationFaultDe" +
            "tailsFault", Name="ServiceValidationFaultDetails", Namespace="http://schemas.datacontract.org/2004/07/WcfBusinessLogic.Core.Contracts.Exception" +
            "s")]
        WcfBusinessLogic.Core.Contracts.Data.OrderBusinessModel[] GetPurchaseHistory(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPurchaseService/GetPurchaseHistory", ReplyAction="http://tempuri.org/IWcfPurchaseService/GetPurchaseHistoryResponse")]
        System.Threading.Tasks.Task<WcfBusinessLogic.Core.Contracts.Data.OrderBusinessModel[]> GetPurchaseHistoryAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPurchaseService/CancelOrderAndRefund", ReplyAction="http://tempuri.org/IWcfPurchaseService/CancelOrderAndRefundResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WcfBusinessLogic.Core.Contracts.Exceptions.ServiceValidationFaultDetails), Action="http://tempuri.org/IWcfPurchaseService/CancelOrderAndRefundServiceValidationFault" +
            "DetailsFault", Name="ServiceValidationFaultDetails", Namespace="http://schemas.datacontract.org/2004/07/WcfBusinessLogic.Core.Contracts.Exception" +
            "s")]
        void CancelOrderAndRefund(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPurchaseService/CancelOrderAndRefund", ReplyAction="http://tempuri.org/IWcfPurchaseService/CancelOrderAndRefundResponse")]
        System.Threading.Tasks.Task CancelOrderAndRefundAsync(int orderId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfPurchaseServiceChannel : TicketManagementMVC.PurchaseService.IWcfPurchaseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfPurchaseServiceClient : System.ServiceModel.ClientBase<TicketManagementMVC.PurchaseService.IWcfPurchaseService>, TicketManagementMVC.PurchaseService.IWcfPurchaseService {
        
        public WcfPurchaseServiceClient() {
        }
        
        public WcfPurchaseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WcfPurchaseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfPurchaseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfPurchaseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddSeatToCart(int seatId, int userId) {
            base.Channel.AddSeatToCart(seatId, userId);
        }
        
        public System.Threading.Tasks.Task AddSeatToCartAsync(int seatId, int userId) {
            return base.Channel.AddSeatToCartAsync(seatId, userId);
        }
        
        public WcfBusinessLogic.Core.Contracts.Data.SeatBusinessModel[] GetOrderedSeats(int userId) {
            return base.Channel.GetOrderedSeats(userId);
        }
        
        public System.Threading.Tasks.Task<WcfBusinessLogic.Core.Contracts.Data.SeatBusinessModel[]> GetOrderedSeatsAsync(int userId) {
            return base.Channel.GetOrderedSeatsAsync(userId);
        }
        
        public void DeleteSeatFromCart(int seatId) {
            base.Channel.DeleteSeatFromCart(seatId);
        }
        
        public System.Threading.Tasks.Task DeleteSeatFromCartAsync(int seatId) {
            return base.Channel.DeleteSeatFromCartAsync(seatId);
        }
        
        public void CreateOrder(int userId) {
            base.Channel.CreateOrder(userId);
        }
        
        public System.Threading.Tasks.Task CreateOrderAsync(int userId) {
            return base.Channel.CreateOrderAsync(userId);
        }
        
        public WcfBusinessLogic.Core.Contracts.Data.OrderBusinessModel[] GetPurchaseHistory(int userId) {
            return base.Channel.GetPurchaseHistory(userId);
        }
        
        public System.Threading.Tasks.Task<WcfBusinessLogic.Core.Contracts.Data.OrderBusinessModel[]> GetPurchaseHistoryAsync(int userId) {
            return base.Channel.GetPurchaseHistoryAsync(userId);
        }
        
        public void CancelOrderAndRefund(int orderId) {
            base.Channel.CancelOrderAndRefund(orderId);
        }
        
        public System.Threading.Tasks.Task CancelOrderAndRefundAsync(int orderId) {
            return base.Channel.CancelOrderAndRefundAsync(orderId);
        }
    }
}
