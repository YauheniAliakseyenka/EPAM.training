<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Area" xml:space="preserve">
    <value>Зона</value>
  </data>
  <data name="AreaList" xml:space="preserve">
    <value>Спіс зон</value>
  </data>
  <data name="CoordsXY" xml:space="preserve">
    <value>Каардынаты X - Каардынаты Y</value>
  </data>
  <data name="CoordX" xml:space="preserve">
    <value>Каардынаты Х</value>
  </data>
  <data name="CoordY" xml:space="preserve">
    <value>Каардынаты Y</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Стварыць</value>
  </data>
  <data name="CreateArea" xml:space="preserve">
    <value>Стварыць зону</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Рэдагаваць</value>
  </data>
  <data name="EditArea" xml:space="preserve">
    <value>Рэдагаваць зону</value>
  </data>
  <data name="EditEventSelectDropDown" xml:space="preserve">
    <value>Выберыце падзея</value>
  </data>
  <data name="Event" xml:space="preserve">
    <value>Падзея</value>
  </data>
  <data name="EventDispalyInformation" xml:space="preserve">
    <value>{0}, {1} у {2}</value>
    <comment>{0} - event title, {1}  - event date, {2} - event time</comment>
  </data>
  <data name="EventInformation" xml:space="preserve">
    <value>Інфармацыя пра падзею</value>
  </data>
  <data name="EventListDate" xml:space="preserve">
    <value>Дата: {0}, {1}</value>
    <comment>{0} - date, {1} - time</comment>
  </data>
  <data name="EventListTitle" xml:space="preserve">
    <value>Спіс падзей</value>
  </data>
  <data name="EventListVenue" xml:space="preserve">
    <value>Месца: {0}</value>
    <comment>{0} - venue</comment>
  </data>
  <data name="EventSelectVenueDropDownLabel" xml:space="preserve">
    <value>Выбярыце месца правяздення</value>
  </data>
  <data name="EventVenue" xml:space="preserve">
    <value>Месца правядзення {0}, {1}</value>
    <comment>{0} - venue name, {1}  - venue description</comment>
  </data>
  <data name="Layout" xml:space="preserve">
    <value>Зал</value>
  </data>
  <data name="ManageEvent" xml:space="preserve">
    <value>Праца з падзеямі</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Цана</value>
  </data>
  <data name="PriceCurrency" xml:space="preserve">
    <value>Цана, USD</value>
  </data>
  <data name="PurchasedSeatCounter" xml:space="preserve">
    <value>Заблакавана</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>Захаваць змены</value>
  </data>
  <data name="Scene" xml:space="preserve">
    <value>Сцэна</value>
  </data>
  <data name="SeatList" xml:space="preserve">
    <value>Спіс месцаў</value>
  </data>
  <data name="SeatNumber" xml:space="preserve">
    <value>Нумар месца</value>
  </data>
  <data name="SeatRow" xml:space="preserve">
    <value>Шэраг</value>
  </data>
  <data name="SeatRowNum" xml:space="preserve">
    <value>Месца (шэраг-нумар)</value>
  </data>
  <data name="SeatState" xml:space="preserve">
    <value>Стан</value>
  </data>
  <data name="SelectImage" xml:space="preserve">
    <value>Вылучыце малюнак</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Час</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Назва</value>
  </data>
  <data name="VenueWithLayout" xml:space="preserve">
    <value>Месца правядзення (Зала)</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Дата</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Апісанне</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Выберыце фільтр</value>
  </data>
</root>