@model TicketManagementMVC.Models.Event.EventAreaViewModel
<h2 class="text-center">@ViewBag.Title</h2>
@using (Html.BeginForm((string)ViewBag.Action, "Event", FormMethod.Post, new { @class = "d-table m-auto", @id = "eventAreaForm" }))
{
    @Html.AntiForgeryToken()
    <div id="errorMessagesEditEventArea" class="errors-login text-danger d-table m-auto"></div>
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x=>x.EventId)

    <div class="d-table m-auto">
        <div class="form-group">
            @Html.LabelFor(x => x.Description, new { @class = "required" })
            @Html.TextBoxFor(x => x.Description, new { @class = "form-control", autocomplete = "off", @style= "width:320px;" })
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.CoordX, new { @class = "required" })
            @Html.TextBoxFor(x => x.CoordX, new { @class = "form-control", autocomplete = "off" })
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.CoordY, new { @class = "required" })
            @Html.TextBoxFor(x => x.CoordY, new { @class = "form-control", autocomplete = "off" })
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Price, new { @class = "required" }), USD
            @if (Model.SeatList.Any(x => x.State == 1))
            {
                @Html.TextBoxFor(x => x.Price, new { @class = "form-control", autocomplete = "off", @readonly = "true" })
            }
            else
            {
                @Html.TextBoxFor(x => x.Price, new { @class = "form-control", autocomplete = "off" })
            }
        </div>
    </div>
    <div class="text-center">
        <button type="button" class="btn btn-primary register-button col-lg-3" onclick="SaveArea('@ViewBag.Action')">@Resource.SaveAreaButton</button>
        <button type="button" class="btn btn-primary back-button col-2" onclick="CloseEventAreaForm()">@Resource.BackButton</button>
    </div>
    <div class="text-center text-success font-weight-bold text" style="font-size:30px;">@Resource.SuccessNotification</div>

    <!--Seat list within area-->
    <br />
    <h4 class="text-center">@Resource.SeatListLabel</h4>
    <table class="table table-striped" id="seatTable">
        <thead>
            <tr>
                <th scope="col">@Resource.SeatRowLabel</th>
                <th scope="col">@Resource.SeatNumberLabel</th>
                <th scope="col">@Resource.SeatStateLabel</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.SeatList.Count(); i++)
            {
                <tr id="seatRow_@i">
                    @Html.HiddenFor(x => Model.SeatList[i].Id)
                    @Html.HiddenFor(x => Model.SeatList[i].EventAreaId)

                    @if (Model.SeatList[i].State == 1)
                    {
                        <th scope="row">
                            @Html.TextBoxFor(x => Model.SeatList[i].Row, new { @class = "form-control",
                           autocomplete = "off", @readonly= "readonly"})
                        </th>
                        <td >
                            @Html.TextBoxFor(x => Model.SeatList[i].Number, new { @class = "form-control",
                           autocomplete = "off", @readonly= "readonly"})
                        </td>
                        <td>
                            @Html.TextBoxFor(x => Model.SeatList[i].State, new { @class = "form-control",
                           autocomplete = "off", @readonly= "readonly"})
                        </td>
                    }
                    else
                    {
                        <th scope="row">
                            @Html.TextBoxFor(x => Model.SeatList[i].Row, new { @class = "form-control", autocomplete = "off" })
                        </th>
                        <td >
                            @Html.TextBoxFor(x => Model.SeatList[i].Number, new { @class = "form-control", autocomplete = "off" })
                        </td>
                        <td>
                            @Html.TextBoxFor(x => Model.SeatList[i].State, new { @class = "form-control", autocomplete = "off", @readonly = "readonly" })
                        </td>
                        <td>
                            <input type="button" value="X" style="width:45px;" onclick="DeleteSeat('@Model.SeatList[i].Id', this)" class="btn btn-primary" name="button" />
                        </td>
                    }
                </tr>
            }
        </tbody>
       
    </table>
     <button type="button" class="btn btn-primary register-button col-12 pt-2" onclick="AddSeatToTable()">@Resource.AddButton</button>
}


